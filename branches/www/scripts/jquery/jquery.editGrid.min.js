/**
 * 格式化数字字符，保留小数位
 */
String.prototype.numberFormat = function(decimals){
    if (isNaN(this) || this == '') { return 0; };
    var sec = this.split('.');
    var whole = parseFloat(sec[0]);
    var result = '';
    if (sec.length > 1) {
        var dec = new String(sec[1]);
        dec = String(parseFloat(sec[1]) / Math.pow(10, (dec.length - decimals)));
        dec = String(whole + Math.round(parseFloat(dec)) / Math.pow(10, decimals));
        var dot = dec.indexOf('.');
        if (dot == -1) {
            dec += '.';
            dot = dec.indexOf('.');
        }
        while (dec.length <= dot + decimals) { dec += '0'; }
        result = dec;
    } else {
        var dot;
        var dec = new String(whole);
        dec += '.';
        dot = dec.indexOf('.');
        while (dec.length <= dot + decimals) { dec += '0'; }
        result = dec;
    }
    return result;
};

$.fn.editGrid = function(params){
    var options = {
        rows : 10,
        action : '',
        columns : {}
    };

    $.extend(options, params);
    var $this = this;

    //创建表格
    var editor = $('<div class="_editor"></div>');
    var table = $('<table class="_table" cellspacing="0"></table>').append('<tr></tr>');

    //创建表头
    table.find('tr').append('<th class="_cross">&nbsp;</th>');
    $.each(options.columns, function(name, attr){
        table.find('tr').append('<th class="_col" nowrap="nowrap">' + attr.text + '</th>');
    });

    //总行列数统计
    var rowsCount = 0;
    var colsCount = 0;

    //添加多个空行
    this.addRows = function(n){
        if (isNaN(n)) { return ; }
        for (var i=0; i<n; i++) {
            this.addRow();
        }
    };

    //生成行
    this.addRow = function(id, data){
        id = isNaN(id) ? 0 : id;
        var tr = $('<tr></tr>');
        table.append(tr);
        var rowIndex = rowsCount++; //行索引
        var colIndex = 0; //列索引
        tr.append('<th class="_row">' + (rowIndex + 1) + '<input type="hidden" name="id" value="' + id + '" /></th>'); //添加行头

        //生成列
        $.each(options.columns, function(name, attr){
            try {
                var value = eval('(data.' + name + ')');
            } catch (e) { var value = ''; }
            var td = $('<td>&nbsp;</td>');
            tr.append(td);

            var currRow = rowIndex; //当前行
            var currCol = colIndex; //当前列
            var html = '';
            if (typeof attr.width == 'number') {
                td.attr('width', attr.width);
            }
            switch(attr.type) {
                case 'image' :
                    if (typeof AjaxUpload == 'function') {
                        if (/\.(jpg|png|jpeg|gif)$/.test(value)) {
                            html = '<div class="_preview"><a href="' + value + '" target="_blank"><img src="' + value + '" onload="if (this.width>50){this.width=50;}if (this.height>50){this.height=50;}" /></a></div>';
                        }
                        html += '<a href="javascript:;" class="_uploadImage">上传</a>'
                             +  '<input type="hidden" name="' + name + '" value="' + value + '" />'
                             +  '<input type="hidden" value="' + attr.url + '" />';
                    } else {
                        alert('使用图片类型字段，请加载 ajaxupload 插件！');
                    }
                    break;
                case 'select':
                    html = '<option></option>';
                    $.each(attr.options, function(i, val){
                        var select = (value == i) ? ' selected' : '';
                        html += '<option value="' + i + '"' + select + '>' + val + '</option>';
                    });
                    html = '<select name=' + name + '>' + html + '</select>';
                    break;
                case 'text':
                case 'money':
                case 'number':
                case 'integer':
                default:
                    html = '<input type="text" class="' + attr.type + '" value="' + value + '" name=' + name + ' />';
                    break;
            }
            td.html(html).find('select,input').focus(function(){
                table.find('td').removeClass('editing');
                var cell = $(this).parent().addClass('editing');
                table.find('th._col').removeClass('_currCol').eq(currCol).addClass('_currCol');
                table.find('th._row').removeClass('_currRow').eq(currRow).addClass('_currRow');
                if (typeof attr.value == 'string' && this.value == '') {
                    this.value = attr.value;
                }
            }).blur(function(){
                switch (this.className) {
                    case 'money':
                        var n = this.value.replace(/[^\+\-\d\.]+/g, '').numberFormat(2);
                        this.value = (n == 0) ? '' : n;
                        break;
                    case 'number':
                        this.value = this.value.replace(/[^\+\-\d\.]+/g, '');
                        break;
                    case 'integer':
                        var n = parseInt(this.value.replace(/[^\+\-\d\.]+/g, ''));
                        this.value = isNaN(n) ? '' : n;
                        break;
                    default: break;
                }
            }).keydown(function(e){
                if ((currRow + 1) == rowsCount) {
                    $this.addRow();
                }
                if (e.keyCode == 13 || e.keyCode == 9) {
                    $this.setPosition(currRow, currCol + 1);
                    return false;
                }
            }).change(function(){
                if ((currRow + 1) == rowsCount) {
                    $this.addRow();
                }
            });

            td.find('a._uploadImage').each(function(){
                //ajax处理图片上传
                new AjaxUpload($(this), {
                    action : $(this).next().next().val(),
                    name : $(this).next().attr('name'),
                    onSubmit : function(file, ext){
                        if (ext && /^(jpg|png|jpeg|gif)$/.test(ext)){
                        } else {
                            alert('对不起，仅允许上传图片文件！');
                            return false;
                        }
                    },
                    onComplete : function(file, response){
                        try {
                            response = window["eval"]("(" + response + ")");
                            if (response.status) {
                                td.find('._preview').remove();
                                td.find('a._uploadImage')
                                    .before('<div class="_preview"><a href="' + response.savename + '" target="_blank"><img src="' + response.savename + '" onload="if (this.width>50){this.width=50;}if (this.height>50){this.height=50;}" /></a></div>');
                                td.find('input:first').val(response.file_id);
                            } else {
                                alert(response.message);
                            }
                        } catch (e) {
                            alert(response);
                            alert('发生未知错误，文件上传失败：' + e.description);
                        }
                    }
                });
            });

            colIndex++;
            if (rowsCount == 1) {
                colsCount++;
            }
        });
    };

    //根据索引定位单元格
    this.setPosition = function(row, col) {
        row++;
        if (col >= colsCount) {
            col = colsCount - col;
            row = row + 1;
        }
        if (row > rowsCount) {
            row = rowsCount - row;
        }
        table.find('tr:eq(' + row + ')').find('td:eq(' + col + ')').find('select,input').focus();
    };

    //生成默认的行数
    for (i = 0; i < options.rows; i++) {
        this.addRow();
    }
    $(this).append(editor.append(table));

    //进度条
    var tips = $('<div class="_tips"></div>');
    var layout  = $('<div class="_loading"><table width="100%" height="100%"><tr><td align="center"><img src="/v3/images/loadingAnimation.gif" align="middle" /></td></tr></table></div>').hide();
    this.append(layout);
    var loading = {
        show : function(){
            var top = document.documentElement ? document.documentElement.scrollTop : document.body.scrollTop;
            layout.show().css({position : 'absolute', top : top, left : 0, width : '100%', height : '100%', background : '#000', opacity : 0.6});
            return this;
        },
        hide : function(){
            layout.hide();
            return this;
        },
        tips : function(html){
            if (html) {
                tips.html(html);
                layout.show().find('td').append(tips);
            } else {
                layout.remove(tips);
            }
            return this;
        }
    };


    //保存表格
    this.save = function(){
        var rows = table.find('tr:gt(0)').not(':last');
        if (rows.length < 1) {
            alert('保存文档前，请先录入数据！');
            return ;
        }

        var tip = '数据处理中，请稍候... &nbsp; ';
        loading.show().tips(tip + '0 %');

        var saved = 0;
        var end = false;
        var _end = function(message){
            if (end) { return; }
            end = true;
            loading.hide();
            alert(message);
        };
        rows.each(function(i){
            var $this = $(this);
            $.ajax({
                type : 'POST',
                url : options.action,
                data : $this.find('select,input').serializeArray(),
                cache : false,
                dataType : 'text',
                success : function(response){
                    try {
                        response = eval('(' + response + ')');
                        saved++;
                        loading.tips(tip + parseInt(saved / rows.length * 100) + ' %');
                        if (typeof response != 'object') {
                            _end('错误的数据响应类型');
                        }
                        if (!response.status) {
                            _end(response.message);
                        }
                        table.find('tr:eq(' + (i + 1) + ') input[name=id]').val(response.id);
                        if (saved == rows.length) {
                            _end('所有数据已保存成功！');
                        }
                    } catch (e) {
                        _end(response);
                    }
                }
            });
        });
    };

    return this;
};